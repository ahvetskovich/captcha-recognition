/usr/bin/python3.4 /home/andy/Github/captcha-recognition/PyProj/ML/securimage/convolution.py
Initializing neural network with 2 layers, 1936 inputs and 29 outputs.
  - Convl: Rectifier  Output: (23, 23)   Channels: 8
  - Dense: Softmax    Units:  29  

Training on dataset of 3,500 samples with 6,877,500 total size.
  - Reshaping input array from (3500, 1936) to (3150, 1, 44, 44).
  - Train: 3,150      Valid: 350 
  - Using `dropout` for regularization.
  - Terminating loop after 100 total iterations.
  - Early termination after 10 stable iterations.

Epoch       Training Error       Validation Error       Time
------------------------------------------------------------
    1          7.605e+01             3.328e+01          2.1s
    2          2.803e+01             1.570e+01          2.1s
    3          1.738e+01             1.149e+01          2.1s
    4          1.283e+01             9.694e+00          2.1s
    5          1.054e+01             9.302e+00          2.1s
    6          9.137e+00             7.300e+00          2.1s
    7          8.207e+00             6.844e+00          2.1s
    8          7.458e+00             6.632e+00          2.1s
    9          6.578e+00             6.384e+00          2.1s
   10          6.672e+00             5.893e+00          2.1s
   11          5.835e+00             5.695e+00          2.1s
   12          5.504e+00             5.834e+00          2.1s
   13          5.364e+00             5.314e+00          2.1s
   14          4.928e+00             5.748e+00          2.1s
   15          4.796e+00             5.308e+00          2.1s
   16          4.706e+00             5.073e+00          2.1s
   17          4.482e+00             5.254e+00          2.1s
   18          4.196e+00             4.921e+00          2.1s
   19          4.118e+00             4.819e+00          2.1s
   20          3.759e+00             5.075e+00          2.1s
   21          3.846e+00             4.612e+00          2.1s
   22          3.798e+00             5.306e+00          2.1s
   23          3.695e+00             4.824e+00          2.1s
   24          3.351e+00             4.515e+00          2.1s
   25          3.372e+00             4.761e+00          2.1s
   26          3.453e+00             4.467e+00          2.1s
   27          3.331e+00             4.526e+00          2.1s
   28          3.341e+00             4.522e+00          2.1s
   29          2.928e+00             4.509e+00          2.1s
   30          2.964e+00             4.484e+00          2.1s
   31          2.883e+00             4.275e+00          2.1s
   32          2.880e+00             4.380e+00          2.1s
   33          2.820e+00             4.223e+00          2.1s
   34          2.696e+00             4.202e+00          2.1s
   35          2.643e+00             4.145e+00          2.1s
   36          2.515e+00             4.337e+00          2.1s
   37          2.489e+00             4.316e+00          2.1s
   38          2.441e+00             4.071e+00          2.1s
   39          2.517e+00             4.060e+00          2.1s
   40          2.342e+00             4.070e+00          2.1s
   41          2.296e+00             3.934e+00          2.2s
   42          2.095e+00             3.930e+00          2.1s
   43          2.161e+00             4.053e+00          2.1s
   44          2.247e+00             4.124e+00          2.1s
   45          1.978e+00             3.993e+00          2.1s
   46          1.943e+00             4.119e+00          2.1s
   47          2.035e+00             4.027e+00          2.2s
   48          2.079e+00             4.302e+00          2.1s
   49          1.967e+00             4.228e+00          2.1s
   50          1.649e+00             4.041e+00          2.1s
   51          1.835e+00             4.173e+00          2.2s
   52          1.958e+00             4.016e+00          2.2s

Early termination condition fired at 52 iterations.
Classification report for classifier Classifier(batch_size=10, callback=None, debug=False, dropout_rate=0.03,
      f_stable=0.001,
      hidden0=<sknn.nn.Convolution `Rectifier`: channels=8, pool_shape=(2, 2), scale_factor=(1, 1), pool_type='max', name='hidden0', frozen=False, border_mode='full', kernel_shape=(3, 3), kernel_stride=(1, 1)>,
      layers=[<sknn.nn.Convolution `Rectifier`: channels=8, pool_shape=(2, 2), scale_factor=(1, 1), pool_type='max', name='hidden0', frozen=False, border_mode='full', kernel_shape=(3, 3), kernel_stride=(1, 1)>, <sknn.nn.Layer `Softmax`: frozen=False, name='output', units=29>],
      learning_momentum=0.9, learning_rate=3e-07, learning_rule='momentum',
      loss_type=None, n_iter=100, n_stable=10,
      output=<sknn.nn.Layer `Softmax`: frozen=False, name='output', units=29>,
      random_state=None, regularize='dropout',
      valid_set=(array([[[[ 0,  0, ...,  0,  0],
         [ 0,  0, ...,  0,  0],
         ...,
         [ 0,  0, ...,  0,  0],
         [ 0,  0, ...,  0,  0]]],


       [[[ 0,  0, ...,  0,  0],
         [ 0,  0, ...,  0,  0],
         ...,
         [ 0,  0, ...,  0,  0],
         [ 0,  0, ...,  0,  0]]..., ...,  0.,  0.],
       ...,
       [ 0.,  0., ...,  0.,  0.],
       [ 0.,  0., ...,  0.,  0.]])),
      valid_size=0.1, verbose=True, warning=None, weight_decay=0.0005,
      weights=None):
             precision    recall  f1-score   support

          2     0.9259    0.8621    0.8929        58
          3     0.9767    0.8750    0.9231        48
          4     0.9831    1.0000    0.9915        58
          5     0.8864    0.8298    0.8571        47
          6     0.8478    0.8864    0.8667        44
          7     0.9808    0.9444    0.9623        54
          8     0.7941    0.7714    0.7826        35
          9     0.8448    0.9608    0.8991        51
          a     1.0000    0.9608    0.9800        51
          b     0.7931    0.8846    0.8364        52
          c     0.9583    0.8846    0.9200        52
          d     0.9400    0.8246    0.8785        57
          e     0.9400    0.8545    0.8952        55
          f     0.8800    0.9362    0.9072        47
          g     0.7288    0.8600    0.7890        50
          h     0.9492    0.9333    0.9412        60
          k     0.8780    0.9730    0.9231        37
          l     0.9516    1.0000    0.9752        59
          m     0.9091    0.9302    0.9195        43
          n     0.9245    0.9074    0.9159        54
          p     0.9111    0.9318    0.9213        44
          r     0.9825    0.9032    0.9412        62
          s     0.8718    0.8500    0.8608        40
          t     0.8824    0.9677    0.9231        62
          u     0.9615    0.9434    0.9524        53
          v     0.9796    0.9600    0.9697        50
          w     1.0000    0.9200    0.9583        50
          y     1.0000    0.9524    0.9756        63
          z     0.9014    1.0000    0.9481        64

avg / total     0.9209    0.9173    0.9178      1500


Confusion matrix:
[[50  0  0  0  0  0  0  1  0  1  0  0  1  0  0  0  0  0  0  0  0  0  0  0
   0  0  0  0  5]
 [ 2 42  0  1  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1
   0  0  0  0  0]
 [ 0  0 58  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
   0  0  0  0  0]
 [ 0  0  0 39  2  0  1  0  0  1  0  1  0  0  0  0  0  0  0  0  0  0  0  2
   1  0  0  0  0]
 [ 0  0  0  1 39  0  0  1  0  1  0  0  0  1  1  0  0  0  0  0  0  0  0  0
   0  0  0  0  0]
 [ 0  0  0  0  0 51  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  2
   0  0  0  0  1]
 [ 0  1  0  0  2  0 27  0  0  1  0  0  1  1  1  0  0  0  0  0  0  0  1  0
   0  0  0  0  0]
 [ 1  0  0  0  1  0  0 49  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 49  0  0  0  0  0  0  0  2  0  0  0  0  0  0  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  3  0  0 46  0  1  0  0  0  0  0  0  1  0  0  1  0  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0 46  0  0  0  6  0  0  0  0  0  0  0  0  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  1  0  0  0 47  0  1  8  0  0  0  0  0  0  0  0  0
   0  0  0  0  0]
 [ 0  0  0  1  0  0  0  0  0  1  1  0 47  1  0  0  0  2  0  0  1  0  1  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  1  0  0  0 44  0  0  0  0  0  0  1  0  0  0
   0  0  0  0  1]
 [ 1  0  0  0  2  0  0  1  0  0  1  0  0  0 43  0  0  0  0  0  0  0  2  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 56  0  0  0  3  0  0  0  1
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 36  1  0  0  0  0  0  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 59  0  0  0  0  0  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  2  0  0  0  0  0  1  0  0 40  0  0  0  0  0
   0  0  0  0  0]
 [ 0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  1  2  0  1 49  0  0  0  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  2  0  0  0  0  0  1  0  0  0  0  0  0 41  0  0  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  1  0  2  0  0  0  0  0  1  0  0  0  0  2 56  0  0
   0  0  0  0  0]
 [ 0  0  0  2  0  0  1  1  0  1  0  1  0  0  0  0  0  0  0  0  0  0 34  0
   0  0  0  0  0]
 [ 0  0  0  0  0  1  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0 60
   0  0  0  0  0]
 [ 0  0  0  0  0  0  2  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0
  50  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0
   1 48  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  1  0  1  1  0  0  0  0
   0  0 46  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  2
   0  1  0 60  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
   0  0  0  0 64]]

Process finished with exit code 0


/usr/bin/python3.4 /home/andy/Github/captcha-recognition/PyProj/ML/securimage/convolution.py
Initializing neural network with 2 layers, 1936 inputs and 29 outputs.
  - Convl: Rectifier  Output: (23, 23)   Channels: 8
  - Dense: Softmax    Units:  29  

Training on dataset of 3,500 samples with 6,877,500 total size.
  - Reshaping input array from (3500, 1936) to (3150, 1, 44, 44).
  - Train: 3,150      Valid: 350 
  - Using `dropout` for regularization.
  - Terminating loop after 100 total iterations.
  - Early termination after 10 stable iterations.

Epoch       Training Error       Validation Error       Time
------------------------------------------------------------
    1          1.974e+01             4.626e+00          4.7s
    2          6.360e+00             3.001e+00          4.8s
    3          4.526e+00             3.220e+00          4.8s
    4          3.402e+00             2.213e+00          4.8s
    5          2.655e+00             2.210e+00          4.8s
    6          2.137e+00             2.027e+00          4.8s
    7          2.054e+00             1.951e+00          5.0s
    8          1.597e+00             1.894e+00          4.9s
    9          1.611e+00             1.696e+00          5.1s
   10          1.192e+00             1.764e+00          4.7s
   11          1.057e+00             1.871e+00          4.7s
   12          9.117e-01             1.832e+00          4.7s
   13          9.562e-01             1.902e+00          4.7s
   14          8.490e-01             1.782e+00          4.7s
   15          8.373e-01             1.672e+00          4.7s
   16          6.543e-01             1.733e+00          4.7s
   17          6.112e-01             1.954e+00          4.7s
   18          6.383e-01             1.979e+00          4.8s
   19          5.214e-01             1.874e+00          4.7s
   20          5.302e-01             1.581e+00          4.7s
   21          5.476e-01             1.872e+00          4.7s
   22          4.086e-01             1.653e+00          4.7s
   23          4.332e-01             1.749e+00          4.7s
   24          4.445e-01             1.656e+00          4.7s
   25          3.145e-01             1.635e+00          4.7s
   26          3.255e-01             1.686e+00          4.7s
   27          2.982e-01             1.468e+00          4.7s
   28          3.166e-01             1.574e+00          4.7s
   29          2.601e-01             1.594e+00          4.7s
   30          2.442e-01             1.657e+00          4.7s
   31          4.107e-01             1.498e+00          4.7s
   32          2.503e-01             1.518e+00          4.9s
   33          2.319e-01             1.396e+00          4.8s
   34          1.957e-01             1.641e+00          4.8s
   35          2.089e-01             1.678e+00          4.7s
   36          2.512e-01             1.379e+00          4.9s
   37          2.175e-01             1.476e+00          4.9s
   38          2.079e-01             1.566e+00          5.0s
   39          1.885e-01             1.463e+00          5.6s
   40          1.410e-01             1.580e+00          4.9s
   41          2.026e-01             1.512e+00          5.0s
   42          1.551e-01             1.375e+00          5.1s
   43          1.884e-01             1.638e+00          4.9s
   44          1.868e-01             1.519e+00          4.9s
   45          1.621e-01             1.541e+00          4.8s
   46          1.073e-01             1.455e+00          5.1s
   47          1.027e-01             1.611e+00          5.0s
   48          1.366e-01             1.601e+00          5.0s
   49          1.334e-01             1.696e+00          4.9s
   50          1.170e-01             1.571e+00          4.8s
   51          9.326e-02             1.514e+00          4.8s
   52          1.192e-01             1.607e+00          5.0s

Early termination condition fired at 52 iterations.
Classification report for classifier Classifier(batch_size=1, callback=None, debug=False, dropout_rate=0.03,
      f_stable=0.001,
      hidden0=<sknn.nn.Convolution `Rectifier`: name='hidden0', channels=8, frozen=False, scale_factor=(1, 1), kernel_stride=(1, 1), border_mode='full', kernel_shape=(3, 3), pool_shape=(2, 2), pool_type='max'>,
      layers=[<sknn.nn.Convolution `Rectifier`: name='hidden0', channels=8, frozen=False, scale_factor=(1, 1), kernel_stride=(1, 1), border_mode='full', kernel_shape=(3, 3), pool_shape=(2, 2), pool_type='max'>, <sknn.nn.Layer `Softmax`: name='output', units=29, frozen=False>],
      learning_momentum=0.9, learning_rate=5e-07, learning_rule='momentum',
      loss_type=None, n_iter=100, n_stable=10,
      output=<sknn.nn.Layer `Softmax`: name='output', units=29, frozen=False>,
      random_state=None, regularize='dropout',
      valid_set=(array([[[[  0, 124, ...,   0,   0],
         [  0, 124, ...,   0,   0],
         ...,
         [  0,   0, ...,   0,   0],
         [  0,   0, ...,   0,   0]]],


       [[[  0,   0, ...,   0,   0],
         [  0,   0, ...,   0,   0],
         ...,
         [  0,   0, ...,   0,   0],
   ..., ...,  0.,  0.],
       ...,
       [ 0.,  0., ...,  0.,  0.],
       [ 0.,  0., ...,  0.,  0.]])),
      valid_size=0.1, verbose=True, warning=None, weight_decay=0.0005,
      weights=None):
             precision    recall  f1-score   support

          2     0.9259    0.9434    0.9346        53
          3     0.9783    0.9000    0.9375        50
          4     1.0000    1.0000    1.0000        47
          5     0.9459    0.8750    0.9091        40
          6     0.8537    0.8750    0.8642        40
          7     0.9130    0.9130    0.9130        46
          8     0.8298    0.8864    0.8571        44
          9     0.9231    0.9600    0.9412        50
          a     0.9808    0.9273    0.9533        55
          b     0.8929    0.8333    0.8621        60
          c     0.9792    0.8704    0.9216        54
          d     0.9000    0.9375    0.9184        48
          e     0.9455    0.8667    0.9043        60
          f     0.9574    0.9184    0.9375        49
          g     0.8214    0.9583    0.8846        48
          h     0.9608    0.9074    0.9333        54
          k     0.9815    0.8833    0.9298        60
          l     0.9322    0.9649    0.9483        57
          m     0.9091    0.9259    0.9174        54
          n     0.7455    0.9762    0.8454        42
          p     0.9000    0.9184    0.9091        49
          r     0.9643    0.9310    0.9474        58
          s     0.9535    0.8913    0.9213        46
          t     0.9667    0.9206    0.9431        63
          u     0.9231    0.9412    0.9320        51
          v     0.9385    0.9531    0.9457        64
          w     0.9565    0.9362    0.9462        47
          y     0.8852    0.9474    0.9153        57
          z     0.8983    0.9815    0.9381        54

avg / total     0.9256    0.9220    0.9225      1500


Confusion matrix:
[[50  0  0  0  0  0  0  1  0  0  0  0  0  0  1  0  0  0  1  0  0  0  0  0
   0  0  0  0  0]
 [ 0 45  0  0  1  0  1  0  0  0  0  0  1  0  0  0  0  1  0  0  0  0  1  0
   0  0  0  0  0]
 [ 0  0 47  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
   0  0  0  0  0]
 [ 0  0  0 35  2  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1
   1  0  0  0  1]
 [ 0  0  0  1 35  0  0  0  0  2  0  1  0  0  1  0  0  0  0  0  0  0  0  0
   0  0  0  0  0]
 [ 1  0  0  0  0 42  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0
   0  1  0  1  0]
 [ 0  0  0  0  1  0 39  0  0  1  0  0  0  0  1  0  0  0  0  0  1  0  0  0
   0  0  0  0  1]
 [ 0  0  0  0  0  0  1 48  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 51  0  0  0  0  0  1  0  0  0  2  1  0  0  0  0
   0  0  0  0  0]
 [ 0  0  0  0  1  0  4  0  0 50  0  1  1  0  1  0  0  0  0  0  0  0  0  0
   0  0  1  0  1]
 [ 0  0  0  0  1  0  0  0  0  0 47  1  0  0  3  0  0  1  0  0  0  0  0  0
   1  0  0  0  0]
 [ 0  1  0  0  0  0  0  1  0  1  0 45  0  0  0  0  0  0  0  0  0  0  0  0
   0  0  0  0  0]
 [ 1  0  0  1  0  0  0  0  0  0  1  0 52  1  0  0  0  2  0  0  0  0  0  0
   1  0  0  0  1]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  1 45  0  0  0  0  0  0  2  0  0  1
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  1  0  0  0  0 46  0  0  0  0  0  0  0  0  0
   1  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 49  0  0  0  5  0  0  0  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  2 53  0  0  2  0  1  0  0
   0  0  0  0  1]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 55  0  0  0  0  0  0
   0  0  0  1  1]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 50  4  0  0  0  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 41  0  0  0  0
   0  0  1  0  0]
 [ 0  0  0  0  0  0  0  1  0  0  0  1  0  1  0  0  0  0  0  0 45  0  0  0
   0  0  0  1  0]
 [ 0  0  0  0  0  0  1  0  0  1  0  0  0  0  0  0  0  0  0  0  2 54  0  0
   0  0  0  0  0]
 [ 0  0  0  0  0  0  1  1  0  0  0  0  0  0  2  0  1  0  0  0  0  0 41  0
   0  0  0  0  0]
 [ 0  0  0  0  0  4  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 58
   0  0  0  1  0]
 [ 1  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  1  0  0  0  0  0
  48  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0
   0 61  0  2  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1  0  0  0  0
   0  0 44  1  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
   0  3  0 54  0]
 [ 1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
   0  0  0  0 53]]

Process finished with exit code 0
